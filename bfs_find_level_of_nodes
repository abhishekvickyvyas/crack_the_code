#include<bits/stdc++.h>
using namespace std;
vector <int>adj[10];
int level[10]={0};
bool vis[10]={false};
void bfs(int s,int nodes)
{
    queue <int> q;
    q.push(s);
    level[s]=0;
    vis[s]=true;
    while(!q.empty())
     {
         int p=q.front();
         q.pop();
          for(auto i=0;i<adj[p].size();i++)
             {
                 
                 if(vis[  adj [ p ] [ i ] ]==false)
                   {
                       level[ adj [ p ] [i ]]= level[p]+1;
                       q.push(adj [ p ] [i ]);
                       vis[adj [ p ] [i ]]=true;
                       
                   }
             }
         
     }
    
    
    for(int i=0;i<nodes;i++)
    cout<<"node "<<i<< "  "<<level[i] << "\n";
    
}
int main()
{
   int i,j,x,y,edges,nodes;
   cin>>nodes>>edges;
   for(i=0;i<edges;i++)
     {
         
         cin>>x>>y;
         adj[x].push_back(y);
     }
     
     bfs(0,nodes);
    //  for(i=1;i<=nodes;i++)
    //   {cout<<"adjecent of "<<i<<" :\n";
    //       for(j=0;j<adj[i].size();j++)
    //         {
                
    //             if(j==adj[i].size()-1)
    //             cout<<" "<<adj[i][j]<< endl;
    //             else
    //             cout<<" "<<adj[i][j]<<"----->";
                
                
    //         }
           
    //   }
       
       
    return 0;
}
